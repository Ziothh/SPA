import type { Metadata } from "next";
import { GeistSans } from "geist/font/sans";
import { BsMoon } from "react-icons/bs";

import { TRPCReactProvider } from "~/trpc/react";

import {
    Tooltip,
    TooltipContent,
    TooltipProvider,
    TooltipTrigger,
} from "~/components/shadcn/ui/tooltip";
import Link from "next/link";
import {
    Code2,
    Home,
    LineChart,
    ListTodo,
    Package,
    Settings,
    ShoppingCart,
    SquareUserRound,
    Triangle,
    Users2,
    Wallet,
} from "lucide-react";

import "~/styles/globals.css";
import React from "react";
import { cx } from "class-variance-authority";
export const metadata: Metadata = {
    title: "Create T3 App",
    description: "Generated by create-t3-app",
    icons: [{ rel: "icon", url: "/favicon.ico" }],
};

export default function RootLayout({
    children,
}: Readonly<{ children: React.ReactNode }>) {
    return (
        <html lang="en" className={`${GeistSans.variable} dark`}>
            <body className="min-h-screen">
                <div className="flex min-h-screen w-full max-sm:flex-col">
                    <TRPCReactProvider>
                        <Navbar />
                        {children}
                    </TRPCReactProvider>
                </div>
            </body>
        </html>
    );
}

const Navbar: React.FC = (_props) => {
    const NavItem: React.FC<{
        label: React.ReactNode;
        href: string;
        icon: React.FC<{ className?: string }>;
        isActive?: boolean;
    }> = (props) => {
        const isActive = props.isActive ?? false;

        return (
            <TooltipProvider delayDuration={500}>
                <Tooltip>
                    <TooltipTrigger asChild>
                        <Link
                            href={props.href}
                            className={cx(
                                "flex h-9 w-9 items-center justify-center rounded-lg transition-colors hover:bg-accent md:h-10 md:w-10",
                                isActive
                                    ? "bg-accent text-accent-foreground hover:text-foreground"
                                    : "text-muted-foreground hover:text-foreground",
                            )}
                        >
                            <props.icon className="size-5" />
                            <span className="sr-only">{props.label}</span>
                        </Link>
                    </TooltipTrigger>
                    <TooltipContent side="right">{props.label}</TooltipContent>
                </Tooltip>
            </TooltipProvider>
        );
    };

    return (
        <aside className="z-10 hidden w-14 flex-col border-r bg-background sm:flex h-screen sticky top-0">
            <Link href="/" className="w-full border-b p-2">
                <span className="group flex h-10 w-10 shrink-0 items-center justify-center gap-2 rounded-lg border border-input bg-background text-lg font-semibold text-primary-foreground transition-all hover:bg-primary md:text-base">
                    {false && (
                        <Code2 className="h-4 w-4 transition-all group-hover:scale-110" />
                    )}
                    <Triangle className="size-5 fill-current transition-all group-hover:scale-110" />
                    <span className="sr-only">Acme Inc</span>
                </span>
            </Link>
            <nav className="flex flex-col items-center gap-1 px-2 sm:pb-5 sm:pt-2">
                <NavItem label="Dashboard" icon={Home} href="#" isActive />
                <NavItem label="Tasks" icon={ListTodo} href="/tasks" />
                <NavItem label="Orders" icon={ShoppingCart} href="#" />
                <NavItem label="Products" icon={Package} href="#" />
                <NavItem label="Customers" icon={Users2} href="#" />
                <NavItem label="Analytics" icon={LineChart} href="#" />
                <NavItem label="Wallet" icon={Wallet} href="/shadcn/wallet" />
            </nav>
            <nav className="mt-auto flex flex-col items-center gap-1 px-2 sm:py-5">
                {false && <NavItem label="Theme" icon={BsMoon} href="#" />}
                <NavItem label="My Profile" icon={SquareUserRound} href="#" />
                <NavItem label="Settings" icon={Settings} href="#" />
            </nav>
        </aside>
    );
};
